'''
Solution 1:
Time complexity: O(logn)
Space complexity: O(1)
'''
def firstBadVersion(self, n: int) -> int:
        if n == 1:
            return 1
        if n == 2:
            return 1 if isBadVersion(1) else 2
        
        left = 1
        right = n
        while left <= right:
            mid = floor((left + right) / 2)
            prev_version_bad = isBadVersion(mid - 1)
            curr_version_bad = isBadVersion(mid)
            if (not prev_version_bad and curr_version_bad):
                return mid
            if curr_version_bad:
                right = mid - 1
            else:
                left = mid + 1
